buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.plugin.spring" version "1.2.50"
    id 'org.springframework.boot' version '2.0.2.RELEASE'
}

group 'com.shiveenp'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-jpa'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5")
    implementation("org.springframework:spring-webflux:5.0.7.RELEASE")
    implementation("org.flywaydb:flyway-core:5.1.3")
    runtime('org.postgresql:postgresql:42.2.1')
    testImplementation("junit:junit:4.12")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}